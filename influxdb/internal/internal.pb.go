// Code generated by protoc-gen-go. DO NOT EDIT.
// source: influxdb/internal/internal.proto

package internal

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Format enumerator
type Format int32

const (
	Format_PROTOBUF Format = 0
	Format_JSON     Format = 1
	Format_STRING   Format = 2
)

var Format_name = map[int32]string{
	0: "PROTOBUF",
	1: "JSON",
	2: "STRING",
}

var Format_value = map[string]int32{
	"PROTOBUF": 0,
	"JSON":     1,
	"STRING":   2,
}

func (x Format) String() string {
	return proto.EnumName(Format_name, int32(x))
}

func (Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7488a9414d9db925, []int{0}
}

// Event resource.
type Event struct {
	// Topic (name) of the event. These should be written in the past tense (event_created)
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Aggregate ID is the primary key of the aggregate to which the event refers to.
	AggregateId string `protobuf:"bytes,2,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	// Version of the aggregate, useful when using concurrency writes.
	Version int64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// Schema of the aggregate.
	Schema string `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	// Format of the encoded type of the aggregate data
	Format Format `protobuf:"varint,5,opt,name=format,proto3,enum=internal.Format" json:"format,omitempty"`
	// Data raw object data.
	Data []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	// Priority of the event, where 0 is the highest priority.
	Priority int32 `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	// Signature includes SHA1 signature computed against it's contents and signature of the previous event.
	Signature string `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	// Origin of the event. e.g. service name.
	OriginName string `protobuf:"bytes,9,opt,name=origin_name,json=originName,proto3" json:"origin_name,omitempty"`
	// Origin of the event. e.g. service ip address / browser.
	OriginIp string `protobuf:"bytes,10,opt,name=origin_ip,json=originIp,proto3" json:"origin_ip,omitempty"`
	// Metadata
	Metadata map[string]string `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Created has the identification of which service has created the event and
	// respective timestamp at which the event ocurred
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,12,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_7488a9414d9db925, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Event) GetAggregateId() string {
	if m != nil {
		return m.AggregateId
	}
	return ""
}

func (m *Event) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Event) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

func (m *Event) GetFormat() Format {
	if m != nil {
		return m.Format
	}
	return Format_PROTOBUF
}

func (m *Event) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Event) GetPriority() int32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Event) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *Event) GetOriginName() string {
	if m != nil {
		return m.OriginName
	}
	return ""
}

func (m *Event) GetOriginIp() string {
	if m != nil {
		return m.OriginIp
	}
	return ""
}

func (m *Event) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Event) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

// Request message for CreateEvent method.
type CreateEventRequest struct {
	// The event resource to create.
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventRequest) Reset()         { *m = CreateEventRequest{} }
func (m *CreateEventRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEventRequest) ProtoMessage()    {}
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7488a9414d9db925, []int{1}
}

func (m *CreateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventRequest.Unmarshal(m, b)
}
func (m *CreateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventRequest.Marshal(b, m, deterministic)
}
func (m *CreateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventRequest.Merge(m, src)
}
func (m *CreateEventRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEventRequest.Size(m)
}
func (m *CreateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventRequest proto.InternalMessageInfo

func (m *CreateEventRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

// Request message for SnapshotEvent method.
type SnapshotEventRequest struct {
	// The event resource to snapshot.
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotEventRequest) Reset()         { *m = SnapshotEventRequest{} }
func (m *SnapshotEventRequest) String() string { return proto.CompactTextString(m) }
func (*SnapshotEventRequest) ProtoMessage()    {}
func (*SnapshotEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7488a9414d9db925, []int{2}
}

func (m *SnapshotEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotEventRequest.Unmarshal(m, b)
}
func (m *SnapshotEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotEventRequest.Marshal(b, m, deterministic)
}
func (m *SnapshotEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotEventRequest.Merge(m, src)
}
func (m *SnapshotEventRequest) XXX_Size() int {
	return xxx_messageInfo_SnapshotEventRequest.Size(m)
}
func (m *SnapshotEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotEventRequest proto.InternalMessageInfo

func (m *SnapshotEventRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

// Request message for GetEvent method.
type GetEventRequest struct {
	// The ID of the event is based on the aggregate_id and version
	AggregateId          string   `protobuf:"bytes,1,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventRequest) Reset()         { *m = GetEventRequest{} }
func (m *GetEventRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventRequest) ProtoMessage()    {}
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7488a9414d9db925, []int{3}
}

func (m *GetEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventRequest.Unmarshal(m, b)
}
func (m *GetEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventRequest.Marshal(b, m, deterministic)
}
func (m *GetEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventRequest.Merge(m, src)
}
func (m *GetEventRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventRequest.Size(m)
}
func (m *GetEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventRequest proto.InternalMessageInfo

func (m *GetEventRequest) GetAggregateId() string {
	if m != nil {
		return m.AggregateId
	}
	return ""
}

func (m *GetEventRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

// Request message for ListEvents method.
type ListEventsRequest struct {
	// The ID of the event is based on the aggregate_id and version
	AggregateId          string   `protobuf:"bytes,1,opt,name=aggregate_id,json=aggregateId,proto3" json:"aggregate_id,omitempty"`
	VersionMin           int64    `protobuf:"varint,2,opt,name=version_min,json=versionMin,proto3" json:"version_min,omitempty"`
	VersionMax           int64    `protobuf:"varint,3,opt,name=version_max,json=versionMax,proto3" json:"version_max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEventsRequest) Reset()         { *m = ListEventsRequest{} }
func (m *ListEventsRequest) String() string { return proto.CompactTextString(m) }
func (*ListEventsRequest) ProtoMessage()    {}
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7488a9414d9db925, []int{4}
}

func (m *ListEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventsRequest.Unmarshal(m, b)
}
func (m *ListEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventsRequest.Marshal(b, m, deterministic)
}
func (m *ListEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventsRequest.Merge(m, src)
}
func (m *ListEventsRequest) XXX_Size() int {
	return xxx_messageInfo_ListEventsRequest.Size(m)
}
func (m *ListEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventsRequest proto.InternalMessageInfo

func (m *ListEventsRequest) GetAggregateId() string {
	if m != nil {
		return m.AggregateId
	}
	return ""
}

func (m *ListEventsRequest) GetVersionMin() int64 {
	if m != nil {
		return m.VersionMin
	}
	return 0
}

func (m *ListEventsRequest) GetVersionMax() int64 {
	if m != nil {
		return m.VersionMax
	}
	return 0
}

func init() {
	proto.RegisterEnum("internal.Format", Format_name, Format_value)
	proto.RegisterType((*Event)(nil), "internal.Event")
	proto.RegisterMapType((map[string]string)(nil), "internal.Event.MetadataEntry")
	proto.RegisterType((*CreateEventRequest)(nil), "internal.CreateEventRequest")
	proto.RegisterType((*SnapshotEventRequest)(nil), "internal.SnapshotEventRequest")
	proto.RegisterType((*GetEventRequest)(nil), "internal.GetEventRequest")
	proto.RegisterType((*ListEventsRequest)(nil), "internal.ListEventsRequest")
}

func init() { proto.RegisterFile("influxdb/internal/internal.proto", fileDescriptor_7488a9414d9db925) }

var fileDescriptor_7488a9414d9db925 = []byte{
	// 627 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x5f, 0x6f, 0xd3, 0x3c,
	0x14, 0xc6, 0xe7, 0x76, 0xed, 0xd2, 0x93, 0xee, 0x5d, 0xdf, 0xa3, 0x69, 0x0a, 0xd9, 0x60, 0xa1,
	0x12, 0x52, 0xf8, 0xa3, 0x14, 0x95, 0x9b, 0xc1, 0x04, 0x17, 0x9b, 0xba, 0xa9, 0x88, 0x75, 0x90,
	0x8d, 0x1b, 0x6e, 0x26, 0xb7, 0xf5, 0x52, 0x6b, 0x4d, 0x1c, 0x12, 0xa7, 0x6a, 0x2f, 0xf9, 0x1c,
	0x7c, 0x36, 0xbe, 0x0b, 0x8a, 0x93, 0x36, 0xb4, 0x1d, 0x48, 0x70, 0xe7, 0xf3, 0x9c, 0xc7, 0x4f,
	0x6d, 0xff, 0x4e, 0x03, 0x16, 0x0f, 0x6e, 0xc7, 0xc9, 0x74, 0xd8, 0x6f, 0xf1, 0x40, 0xb2, 0x28,
	0xa0, 0xe3, 0xc5, 0xc2, 0x09, 0x23, 0x21, 0x05, 0x6a, 0xf3, 0xda, 0x3c, 0xf4, 0x84, 0xf0, 0xc6,
	0xac, 0xa5, 0xf4, 0x7e, 0x72, 0xdb, 0x92, 0xdc, 0x67, 0xb1, 0xa4, 0x7e, 0x98, 0x59, 0xcd, 0xfd,
	0x55, 0x03, 0xf3, 0x43, 0x39, 0xcb, 0x9a, 0xcd, 0x1f, 0x65, 0xa8, 0x74, 0x26, 0x2c, 0x90, 0xb8,
	0x0b, 0x15, 0x29, 0x42, 0x3e, 0x30, 0x88, 0x45, 0xec, 0x9a, 0x9b, 0x15, 0xf8, 0x18, 0xea, 0xd4,
	0xf3, 0x22, 0xe6, 0x51, 0xc9, 0x6e, 0xf8, 0xd0, 0x28, 0xa9, 0xa6, 0xbe, 0xd0, 0xba, 0x43, 0x34,
	0x60, 0x6b, 0xc2, 0xa2, 0x98, 0x8b, 0xc0, 0x28, 0x5b, 0xc4, 0x2e, 0xbb, 0xf3, 0x12, 0xf7, 0xa0,
	0x1a, 0x0f, 0x46, 0xcc, 0xa7, 0xc6, 0xa6, 0xda, 0x96, 0x57, 0x68, 0x43, 0xf5, 0x56, 0x44, 0x3e,
	0x95, 0x46, 0xc5, 0x22, 0xf6, 0x7f, 0xed, 0x86, 0xb3, 0xb8, 0xdd, 0x99, 0xd2, 0xdd, 0xbc, 0x8f,
	0x08, 0x9b, 0x43, 0x2a, 0xa9, 0x51, 0xb5, 0x88, 0x5d, 0x77, 0xd5, 0x1a, 0x4d, 0xd0, 0xc2, 0x88,
	0x8b, 0x88, 0xcb, 0x99, 0xb1, 0x65, 0x11, 0xbb, 0xe2, 0x2e, 0x6a, 0x3c, 0x80, 0x5a, 0xcc, 0xbd,
	0x80, 0xca, 0x24, 0x62, 0x86, 0xa6, 0x7e, 0xb4, 0x10, 0xf0, 0x10, 0x74, 0x11, 0x71, 0x8f, 0x07,
	0x37, 0x01, 0xf5, 0x99, 0x51, 0x53, 0x7d, 0xc8, 0xa4, 0x1e, 0xf5, 0x19, 0xee, 0x43, 0x2d, 0x37,
	0xf0, 0xd0, 0x00, 0xd5, 0xd6, 0x32, 0xa1, 0x1b, 0xe2, 0x6b, 0xd0, 0x7c, 0x26, 0xa9, 0x3a, 0x8f,
	0x6e, 0x95, 0x6d, 0xbd, 0xfd, 0xb0, 0x38, 0xb7, 0x7a, 0x43, 0xe7, 0x22, 0xef, 0x77, 0x02, 0x19,
	0xcd, 0xdc, 0x85, 0x1d, 0x8f, 0x41, 0x1f, 0x44, 0x2c, 0x7d, 0xc2, 0x14, 0x8e, 0x51, 0xb7, 0x88,
	0xad, 0xb7, 0x4d, 0x27, 0x03, 0xe3, 0xcc, 0xc1, 0x38, 0xd7, 0x73, 0x72, 0x2e, 0x64, 0xf6, 0x54,
	0x30, 0x8f, 0x61, 0x7b, 0x29, 0x17, 0x1b, 0x50, 0xbe, 0x63, 0xb3, 0x9c, 0x53, 0xba, 0x4c, 0xd9,
	0x4d, 0xe8, 0x38, 0x61, 0x39, 0x9e, 0xac, 0x78, 0x53, 0x3a, 0x22, 0xcd, 0x63, 0xc0, 0x53, 0x15,
	0xa5, 0x0e, 0xe8, 0xb2, 0xaf, 0x09, 0x8b, 0x25, 0x3e, 0x81, 0x0a, 0x4b, 0x6b, 0x95, 0xa1, 0xb7,
	0x77, 0x56, 0xee, 0xe1, 0x66, 0xdd, 0xe6, 0x5b, 0xd8, 0xbd, 0x0a, 0x68, 0x18, 0x8f, 0x84, 0xfc,
	0x97, 0xed, 0x3d, 0xd8, 0x39, 0x67, 0xcb, 0x3b, 0x57, 0xc7, 0x89, 0xfc, 0x71, 0x9c, 0x4a, 0x4b,
	0xe3, 0xd4, 0x9c, 0xc2, 0xff, 0x1f, 0x78, 0x9c, 0x05, 0xc6, 0x7f, 0x91, 0x78, 0x08, 0x7a, 0x1e,
	0x71, 0xe3, 0xf3, 0x79, 0x2a, 0xe4, 0xd2, 0x05, 0x0f, 0x96, 0x0c, 0x74, 0x9a, 0x4f, 0xf1, 0xc2,
	0x40, 0xa7, 0xcf, 0x5e, 0x40, 0x35, 0x1b, 0x4c, 0xac, 0x83, 0xf6, 0xd1, 0xbd, 0xbc, 0xbe, 0x3c,
	0xf9, 0x7c, 0xd6, 0xd8, 0x40, 0x0d, 0x36, 0xdf, 0x5f, 0x5d, 0xf6, 0x1a, 0x04, 0x01, 0xaa, 0x57,
	0xd7, 0x6e, 0xb7, 0x77, 0xde, 0x28, 0xb5, 0xbf, 0x13, 0xd8, 0x3a, 0x15, 0xbe, 0x4f, 0x83, 0x21,
	0x76, 0x40, 0xff, 0xe5, 0xfd, 0xf1, 0xa0, 0x78, 0xaa, 0x75, 0x2c, 0xe6, 0xde, 0xda, 0x44, 0x74,
	0xd2, 0xbf, 0x6a, 0x73, 0x03, 0xbb, 0xb0, 0xbd, 0x44, 0x02, 0x1f, 0x15, 0x41, 0xf7, 0x21, 0xfa,
	0x7d, 0x54, 0xfb, 0x1b, 0x81, 0xca, 0xa7, 0x84, 0x45, 0x33, 0x3c, 0x02, 0x6d, 0xce, 0x07, 0x1f,
	0x14, 0x79, 0x2b, 0xcc, 0xcc, 0x55, 0xbc, 0xcd, 0x0d, 0x7c, 0x07, 0x50, 0x90, 0xc0, 0xfd, 0xc2,
	0xb0, 0xc6, 0xe7, 0x9e, 0xdd, 0x2f, 0xc9, 0xc9, 0xf3, 0x2f, 0x4f, 0x3d, 0x2e, 0x47, 0x49, 0xdf,
	0x19, 0x08, 0xbf, 0x45, 0x93, 0xbb, 0x3e, 0x97, 0xad, 0x11, 0x0f, 0x43, 0xd1, 0x5a, 0xfb, 0xf2,
	0xf5, 0xab, 0xea, 0x0a, 0xaf, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xf7, 0xdd, 0xbd, 0x15,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommandClient is the client API for Command service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommandClient interface {
	CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SnapshotEvent(ctx context.Context, in *SnapshotEventRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type commandClient struct {
	cc *grpc.ClientConn
}

func NewCommandClient(cc *grpc.ClientConn) CommandClient {
	return &commandClient{cc}
}

func (c *commandClient) CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/internal.Command/CreateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commandClient) SnapshotEvent(ctx context.Context, in *SnapshotEventRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/internal.Command/SnapshotEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommandServer is the server API for Command service.
type CommandServer interface {
	CreateEvent(context.Context, *CreateEventRequest) (*empty.Empty, error)
	SnapshotEvent(context.Context, *SnapshotEventRequest) (*empty.Empty, error)
}

// UnimplementedCommandServer can be embedded to have forward compatible implementations.
type UnimplementedCommandServer struct {
}

func (*UnimplementedCommandServer) CreateEvent(ctx context.Context, req *CreateEventRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (*UnimplementedCommandServer) SnapshotEvent(ctx context.Context, req *SnapshotEventRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SnapshotEvent not implemented")
}

func RegisterCommandServer(s *grpc.Server, srv CommandServer) {
	s.RegisterService(&_Command_serviceDesc, srv)
}

func _Command_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Command/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).CreateEvent(ctx, req.(*CreateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Command_SnapshotEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandServer).SnapshotEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Command/SnapshotEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandServer).SnapshotEvent(ctx, req.(*SnapshotEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Command_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internal.Command",
	HandlerType: (*CommandServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEvent",
			Handler:    _Command_CreateEvent_Handler,
		},
		{
			MethodName: "SnapshotEvent",
			Handler:    _Command_SnapshotEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "influxdb/internal/internal.proto",
}

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	GetEvent(ctx context.Context, in *GetEventRequest, opts ...grpc.CallOption) (*Event, error)
	ListEvents(ctx context.Context, in *ListEventsRequest, opts ...grpc.CallOption) (Query_ListEventsClient, error)
}

type queryClient struct {
	cc *grpc.ClientConn
}

func NewQueryClient(cc *grpc.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) GetEvent(ctx context.Context, in *GetEventRequest, opts ...grpc.CallOption) (*Event, error) {
	out := new(Event)
	err := c.cc.Invoke(ctx, "/internal.Query/GetEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) ListEvents(ctx context.Context, in *ListEventsRequest, opts ...grpc.CallOption) (Query_ListEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Query_serviceDesc.Streams[0], "/internal.Query/ListEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &queryListEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Query_ListEventsClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type queryListEventsClient struct {
	grpc.ClientStream
}

func (x *queryListEventsClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	GetEvent(context.Context, *GetEventRequest) (*Event, error)
	ListEvents(*ListEventsRequest, Query_ListEventsServer) error
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) GetEvent(ctx context.Context, req *GetEventRequest) (*Event, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedQueryServer) ListEvents(req *ListEventsRequest, srv Query_ListEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListEvents not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.Query/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetEvent(ctx, req.(*GetEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_ListEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListEventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(QueryServer).ListEvents(m, &queryListEventsServer{stream})
}

type Query_ListEventsServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type queryListEventsServer struct {
	grpc.ServerStream
}

func (x *queryListEventsServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internal.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEvent",
			Handler:    _Query_GetEvent_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListEvents",
			Handler:       _Query_ListEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "influxdb/internal/internal.proto",
}
